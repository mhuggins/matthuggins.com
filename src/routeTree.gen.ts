/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as BlogIndexRouteImport } from './routes/blog.index'
import { Route as BlogTagsTagRouteImport } from './routes/blog.tags.$tag'
import { Route as BlogPostsSlugRouteImport } from './routes/blog.posts.$slug'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogIndexRoute = BlogIndexRouteImport.update({
  id: '/blog/',
  path: '/blog/',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogTagsTagRoute = BlogTagsTagRouteImport.update({
  id: '/blog/tags/$tag',
  path: '/blog/tags/$tag',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogPostsSlugRoute = BlogPostsSlugRouteImport.update({
  id: '/blog/posts/$slug',
  path: '/blog/posts/$slug',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/blog': typeof BlogIndexRoute
  '/blog/posts/$slug': typeof BlogPostsSlugRoute
  '/blog/tags/$tag': typeof BlogTagsTagRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/blog': typeof BlogIndexRoute
  '/blog/posts/$slug': typeof BlogPostsSlugRoute
  '/blog/tags/$tag': typeof BlogTagsTagRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/blog/': typeof BlogIndexRoute
  '/blog/posts/$slug': typeof BlogPostsSlugRoute
  '/blog/tags/$tag': typeof BlogTagsTagRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/blog' | '/blog/posts/$slug' | '/blog/tags/$tag'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/blog' | '/blog/posts/$slug' | '/blog/tags/$tag'
  id: '__root__' | '/' | '/blog/' | '/blog/posts/$slug' | '/blog/tags/$tag'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BlogIndexRoute: typeof BlogIndexRoute
  BlogPostsSlugRoute: typeof BlogPostsSlugRoute
  BlogTagsTagRoute: typeof BlogTagsTagRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog/': {
      id: '/blog/'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog/tags/$tag': {
      id: '/blog/tags/$tag'
      path: '/blog/tags/$tag'
      fullPath: '/blog/tags/$tag'
      preLoaderRoute: typeof BlogTagsTagRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog/posts/$slug': {
      id: '/blog/posts/$slug'
      path: '/blog/posts/$slug'
      fullPath: '/blog/posts/$slug'
      preLoaderRoute: typeof BlogPostsSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BlogIndexRoute: BlogIndexRoute,
  BlogPostsSlugRoute: BlogPostsSlugRoute,
  BlogTagsTagRoute: BlogTagsTagRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
